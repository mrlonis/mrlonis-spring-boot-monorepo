{
	"info": {
		"_postman_id": "39680cb9-8524-4656-a5db-59de2257cd82",
		"name": "demo-genshin-impact-spring-boot",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10017040"
	},
	"item": [
		{
			"name": "Spring Data Rest",
			"item": [
				{
					"name": "artifacts",
					"item": [
						{
							"name": "findAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is application/hal+json\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"    ",
											"    var contentType = postman.getResponseHeader(\"Content-Type\");",
											"    pm.expect(contentType).to.be.eql(\"application/hal+json\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/artifacts?page=0&size=0&sort=name,asc",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"artifacts"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name,asc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Extract Artifact ID\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"  pm.environment.set(\"testArtifactId\", responseJson.id);",
											"  pm.environment.set(\"testArtifactName\", responseJson.name);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/artifacts/search/findByName?name=Blizzard Strayer",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"artifacts",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Blizzard Strayer"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {",
											"  pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/artifacts/search/findByName?name=Fake",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"artifacts",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Fake"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Artifact ID Is Not Null\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/artifacts/{{testArtifactId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"artifacts",
										"{{testArtifactId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "findById - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {",
											"  pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/artifacts/11111111-1111-1111-1111-111111111111",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"artifacts",
										"11111111-1111-1111-1111-111111111111"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "characters",
					"item": [
						{
							"name": "findAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is application/hal+json\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    \r",
											"    var contentType = postman.getResponseHeader(\"Content-Type\");\r",
											"    pm.expect(contentType).to.be.eql(\"application/hal+json\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters?page=0&size=0&sort=name,asc",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name,asc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findAll - Sort By Name & Rarity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is application/hal+json\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    \r",
											"    var contentType = postman.getResponseHeader(\"Content-Type\");\r",
											"    pm.expect(contentType).to.be.eql(\"application/hal+json\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters?page=0&size=0&sort=rarity,desc&sort=name,asc",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "rarity,desc"
										},
										{
											"key": "sort",
											"value": "name,asc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Extract Character ID\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"  pm.environment.set(\"testCharacterId\", responseJson.id);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters/search/findByName?name=Kamisato Ayaka",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Kamisato Ayaka"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Extract Character ID\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"  pm.environment.set(\"testCharacterId\", responseJson.id);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters/search/findByName?name=Kamisato Ayaka",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Kamisato Ayaka"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 404\", function(){",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters/search/findByName?name=Fake",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Fake"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Character ID Is  Not Null\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters/{{testCharacterId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters",
										"{{testCharacterId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "findById - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 404\", function(){",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters/11111111-1111-1111-1111-111111111111",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters",
										"11111111-1111-1111-1111-111111111111"
									]
								}
							},
							"response": []
						},
						{
							"name": "findByArtifactSet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"At least 1 Character should be returned\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson._embedded.data.length).to.be.greaterThan(1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters/search/findByArtifactSet?artifactSetOneIdFirst={{testArtifactId}}&artifactSetOneIdSecond={{testArtifactId}}&artifactSetTwoIdFirst={{testArtifactId}}&artifactSetTwoIdSecond={{testArtifactId}}&artifactSetThreeIdFirst={{testArtifactId}}&artifactSetThreeIdSecond={{testArtifactId}}&artifactSetFourIdFirst={{testArtifactId}}&artifactSetFourIdSecond={{testArtifactId}}&artifactSetFiveIdFirst={{testArtifactId}}&artifactSetFiveIdSecond={{testArtifactId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters",
										"search",
										"findByArtifactSet"
									],
									"query": [
										{
											"key": "artifactSetOneIdFirst",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetOneIdSecond",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetTwoIdFirst",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetTwoIdSecond",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetThreeIdFirst",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetThreeIdSecond",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetFourIdFirst",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetFourIdSecond",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetFiveIdFirst",
											"value": "{{testArtifactId}}"
										},
										{
											"key": "artifactSetFiveIdSecond",
											"value": "{{testArtifactId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByArtifactSet - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"No Character should be returned\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson._embedded.data.length).to.be.eq(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/characters/search/findByArtifactSet?artifactSetOneIdFirst=11111111-1111-1111-1111-111111111111&artifactSetOneIdSecond=11111111-1111-1111-1111-111111111111&artifactSetTwoIdFirst=11111111-1111-1111-1111-111111111111&artifactSetTwoIdSecond=11111111-1111-1111-1111-111111111111&artifactSetThreeIdFirst=11111111-1111-1111-1111-111111111111&artifactSetThreeIdSecond=11111111-1111-1111-1111-111111111111&artifactSetFourIdFirst=11111111-1111-1111-1111-111111111111&artifactSetFourIdSecond=11111111-1111-1111-1111-111111111111&artifactSetFiveIdFirst=11111111-1111-1111-1111-111111111111&artifactSetFiveIdSecond=11111111-1111-1111-1111-111111111111",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"characters",
										"search",
										"findByArtifactSet"
									],
									"query": [
										{
											"key": "artifactSetOneIdFirst",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetOneIdSecond",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetTwoIdFirst",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetTwoIdSecond",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetThreeIdFirst",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetThreeIdSecond",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetFourIdFirst",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetFourIdSecond",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetFiveIdFirst",
											"value": "11111111-1111-1111-1111-111111111111"
										},
										{
											"key": "artifactSetFiveIdSecond",
											"value": "11111111-1111-1111-1111-111111111111"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "element",
					"item": [
						{
							"name": "findAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is application/hal+json\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"    ",
											"    var contentType = postman.getResponseHeader(\"Content-Type\");",
											"    pm.expect(contentType).to.be.eql(\"application/hal+json\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/elements?page=0&size=0&sort=name,asc",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"elements"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name,asc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Extract Element ID\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"  pm.environment.set(\"testElementId\", responseJson.id);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/elements/search/findByName?name=Anemo",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"elements",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Anemo"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {",
											"  pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/elements/search/findByName?name=Fake",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"elements",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Fake"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Element ID Is Not Null\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/elements/{{testElementId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"elements",
										"{{testElementId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "findById - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {",
											"  pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/elements/11111111-1111-1111-1111-111111111111",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"elements",
										"11111111-1111-1111-1111-111111111111"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "weapon",
					"item": [
						{
							"name": "findAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is application/hal+json\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"    ",
											"    var contentType = postman.getResponseHeader(\"Content-Type\");",
											"    pm.expect(contentType).to.be.eql(\"application/hal+json\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/weapons?page=0&size=0&sort=name",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"weapons"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Extract Weapon ID\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"  pm.environment.set(\"testWeaponId\", responseJson.id);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/weapons/search/findByName?name=Amenoma Kageuchi",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"weapons",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Amenoma Kageuchi"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByName - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {",
											"  pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/weapons/search/findByName?name=Fake",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"weapons",
										"search",
										"findByName"
									],
									"query": [
										{
											"key": "name",
											"value": "Fake"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Weapon ID Is Not Null\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.not.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/weapons/{{testWeaponId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"weapons",
										"{{testWeaponId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "findById - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {",
											"  pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/weapons/11111111-1111-1111-1111-111111111111",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"weapons",
										"11111111-1111-1111-1111-111111111111"
									]
								}
							},
							"response": []
						},
						{
							"name": "findByWeaponType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/weapons/search/findByWeaponType?weaponType=SWORD",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"weapons",
										"search",
										"findByWeaponType"
									],
									"query": [
										{
											"key": "weaponType",
											"value": "SWORD"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findByWeaponType - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", () => {",
											"  pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"Unable to convert Enum\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.cause.cause.cause).to.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/weapons/search/findByWeaponType?weaponType=Sword",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"weapons",
										"search",
										"findByWeaponType"
									],
									"query": [
										{
											"key": "weaponType",
											"value": "Sword"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Api",
			"item": [
				{
					"name": "artifacts",
					"item": [
						{
							"name": "Get All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/artifacts",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"artifacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get By - No Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 500\", function(){",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/artifact",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"artifact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/artifact?id={{testArtifactId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"artifact"
									],
									"query": [
										{
											"key": "id",
											"value": "{{testArtifactId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get By ID - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 500\", function(){",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/artifact?id=11111111-1111-1111-1111-111111111111",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"artifact"
									],
									"query": [
										{
											"key": "id",
											"value": "11111111-1111-1111-1111-111111111111"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get By Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/artifact?name={{testArtifactName}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"artifact"
									],
									"query": [
										{
											"key": "name",
											"value": "{{testArtifactName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get By Name - Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 500\", function(){",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/artifact?name=Fake",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"artifact"
									],
									"query": [
										{
											"key": "name",
											"value": "Fake"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Characters",
					"item": [
						{
							"name": "Get All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/characters",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"characters"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Artifact Breakdown",
					"item": [
						{
							"name": "Get Artifact Breakdown",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/artifactBreakdown?artifactId={{testArtifactId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"artifactBreakdown"
									],
									"query": [
										{
											"key": "artifactId",
											"value": "{{testArtifactId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Artifact Breakdown - Artifact Doesn't Exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response Status Code is 500\", function(){",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostname}}/api/v2/artifactBreakdown?artifactId=11111111-1111-1111-1111-111111111111",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"v2",
										"artifactBreakdown"
									],
									"query": [
										{
											"key": "artifactId",
											"value": "11111111-1111-1111-1111-111111111111"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Images",
			"item": [
				{
					"name": "Get Character Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostname}}/api/images/:type/:fimename",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"images",
								":type",
								":fimename"
							],
							"variable": [
								{
									"key": "type",
									"value": "characters"
								},
								{
									"key": "fimename",
									"value": "Ayaka.png"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Element Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostname}}/api/images/:type/:fimename",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"images",
								":type",
								":fimename"
							],
							"variable": [
								{
									"key": "type",
									"value": "elements"
								},
								{
									"key": "fimename",
									"value": "Pyro.svg"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Artifact Image",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostname}}/api/images/artifacts/Resolution Of Sojourner.webp",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"images",
								"artifacts",
								"Resolution Of Sojourner.webp"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Actuator",
			"item": [
				{
					"name": "Actuator Mappings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status Code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostname}}/actuator/mappings",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"actuator",
								"mappings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "List API Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response Status Code is 200\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{hostname}}/api",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}